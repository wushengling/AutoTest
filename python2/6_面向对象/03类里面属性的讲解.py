#coding:utf-8
"""
类可以用来封装属性和方法:
特征:属性
    属性:就是定义在类里面的变量
    类属性:直接定义在类里面的变量(这个类的每个对象都有这个属性,而且属性值是一样的)
        类属性的定义:直接在类里面定义变量
    对象属性(实例属性):这一类事物中可能会有些属性,属性值不一样
        对象属性的定义:
            方式一:通过对象进行赋值: 对象.属性 = 属性值
            方式二:通过初始化方法__init__进行定义: self.属性 = 属性值
    
方法:函数
    方法:就是定义在类里面的函数
    
对象:通过类创建出来的,拥有这个类所有的特征和行为
通过类创建对象:
    obj = 类名()
    
self:代表的是对象本身,那个对象去调用方法,self代表就是那个对象
"""

#初始化方法:__init__
class Car:
    #类属性
    a= "1"
    b= "2"
    def __init__(self,name,age,gender):
        #通过类去创建对象的时候,改方法会自动调用
        #初始化对象属性
        print(self)
        print(name,age,gender)
        self.name = name
        self.age = age
        self.gender = gender
        print("init方法创建对象的时候,自动调用了")


car1 = Car("喵喵",1,"公")
print(car1)        