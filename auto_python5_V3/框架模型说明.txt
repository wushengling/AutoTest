分层设计(项目结构):
1.公共的方法的目录:common
2.测试用例类模块目录:testcases
3.测试数据目录:data
4.测试报告存放目录:reports
5.存放一些下载第三放的模块:library
6.配置文件存放目录:conf
7.日志文件存放的目录:logs
8.项目的启动文件:run_test.py

因为vscode自身的bug,导入包是会找不到,需要自定义:
# vscode读取不到了包路径解决方案
import sys
import os
curPath = os.path.abspath(os.path.dirname(__file__))
rootPath = os.path.split(curPath)[0]
sys.path.append(rootPath)

关于包导入的相关建议:
1.包导入尽量写在文件的顶部
2.包导入的顺序
    先导入python的内置模块
    再导入第三方的库
    最后导入自定义的库

程序运行流程:
-1.创建测试套件

-2.添加测试用例到套件
    - 创建loader对象
    - 生成测试用例
        - 读取excel中的测试用例数据
        - 使用ddt根据用例数据来生成测试用例
    - 将指定路径下的测试用例加载到套件

-3.执行测试用例程序,生成测试报告
    - runner.run(suiter)
        - 遍历出套件中所有测试用例,一条一条去执行
        - 每一条测试用例执行的流程:
            - 1.获取用户数据
            - 2.发送请求参数到接口地址(单元测试:调用功能函数,传入参数)
            - 3.获取返回的实际结果,和预期结果进行断言,看用例是否执行通过